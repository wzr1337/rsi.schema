---
"$schema": "http://json-schema.org/draft-06/schema#"  # this schema is based on
title: RSI Validation Schema # the validation schemas title
version: 2.0.0 # its version
"$ref": "#/definitions/serviceDefinition" # the root element
definitions: # all the definitions follow
  accessMethodDefinition:
    type: object
    properties:
      usesPermissions:
        type: array
        items:
          type: string
          pattern: "^[a-z][a-zA-Z0-9]+Read|Write$" # uses lowerCamelCase and need a Write or Read at the end
      description:
        type: string
      parameters:
        "$ref": "#/definitions/parametersDefinition"
    additionalProperties: false
  attributeDefinition:
    type: object
    anyOf: # @@@ TODO: switch to oneOf for stricter checks
    - "$ref": "#/definitions/numberTypeDefintion"
    - "$ref": "#/definitions/booleanTypeDefintion"
    - "$ref": "#/definitions/objectTypeDefintion"
    - "$ref": "#/definitions/stringTypeDefintion"
    - type: object
  booleanTypeDefintion:
    type: object
    properties:
      description: # description is a mandatory field of any attribute definition
        type: string
      type: # this attribute is of type boolean
        type: string
        pattern: boolean
    additionalProperties: false
    required:
    - description
    - type
  elementAccessMethodsDefinition:
    type: object
    patternProperties:
      "^get|delete|post|put|subscribe$":
        "$ref": "#/definitions/accessMethodDefinition"
    additionalProperties: false
  numberTypeDefintion: 
    type: object
    properties:
      description: # description is a mandatory field of any attribute definition
        type: string
      type:
        type: string # this attribute is of type number
        pattern: number
      resolution: # specifies numbers resolution - value 1 describes an integer
        type: number
      minimum: # specifies the minumum value (optional)
        type: number
      maximum: # specifies the maximum value (optional)
        type: number
      unit: # the <unit> the value is measured in (optional)
        type: string
    additionalProperties: false
    required:
    - description
    - type
    - resolution
  objectModelDefinition:
    type: object
    properties:
      attributes:
        type: object
        properties:
          id:
            type: object
            properties:
              description:
                type: string
                minLength: 2
              type:
                type: string
                pattern: string
              format:
                type: string
                pattern: uuid
            required:
            - description
            - type
            - format
          name:
            type: object
            properties:
              description:
                type: string
              type:
                type: string
                pattern: string
          uri:
            type: object
            properties:
              description:
                type: string
                minLength: 2
              type:
                type: string
                pattern: string
              format:
                type: string
                pattern: uri
            required:
            - description
            - type
            - format
        patternProperties:
          "^[a-zA-Z0-9]+$":
            "$ref": "#/definitions/attributeDefinition"
        additionalProperties: false
        required:
        - id
        - name
        - uri
      accessMethods:
        "$ref": "#/definitions/elementAccessMethodsDefinition"
  objectModelReference:
    type: object
    properties:
      "#ref":
        type: string
        pattern: "^([a-zA-Z]+\\.[a-zA-Z]+Object|[a-zA-Z]+\\.[a-zA-Z]+Type)$"
    additionalProperties: false
    required:
    - "#ref"
  objectTypeDefintion:
    type: object
    properties:
      description: # description is a mandatory field of any attribute definition
        type: string
      type: # this attribute is of type string
        type: string
        pattern: object
      oneOf: # limits the number of valid values (optional)
        type: array
        minItems: 1
        items:
          "$ref": "#/definitions/objectModelReference"
    additionalProperties: false
    required:
    - description
    - type
  parametersDefinition:
    type: object
    patternProperties:
      "^[a-zA-Z0-9]+$":
        type: object # @@TODO: become more specific
      additionalProperties: false
  resourceAccessMethodsDefinition:
    type: object
    patternProperties:
      "^get|post|subscribe$":
        "$ref": "#/definitions/accessMethodDefinition"
    additionalProperties: false
  resourcesObjectDefinition:
    type: object
    properties:
      description:
        type: string
      objectModel:
        "$ref": "#/definitions/objectModelDefinition"
      accessMethods:
        "$ref": "#/definitions/resourceAccessMethodsDefinition"
    required:
    - description
    - objectModel
    additionalProperties: false
  serviceDefinition:
    type: object
    properties:
      name:
        type: string
        pattern: "^rsi\\.service\\.[a-z0-9]+$"
      resources: # holds a dictionary/map of resources provided by the service
        type: object
        patternProperties:
          "^[a-zA-Z0-9]+$":
            "$ref": "#/definitions/resourcesObjectDefinition"
      types:
        "$ref": "#/definitions/typesDefinition"
      description:
        type: string
      "$schema":
        type: string
    required:
    - description
    - name
    - "$schema"
    additionalProperties: false
  stringTypeDefintion:
    type: object
    properties:
      description: # description is a mandatory field of any attribute definition
        type: string
      type: # this attribute is of type string
        type: string
        pattern: string
      format: # the string value of the attribute/property will be in the <format> - predefined or regex - format (optional)
        type: string
      enum: # limits the number of valid values (optional)
        type: array
        items:
          type: string # might as well contain a javascript compliant regex pattern
    additionalProperties: false
    required:
    - description
    - type
  typeModelDefinition: # describes the actual type
    type: object
    properties:
      description:
        type: string
      attributes:
        type: object
        patternProperties:
          "^[a-zA-Z0-9]+$":
            "$ref": "#/definitions/attributeDefinition"
        additionalProperties: false
    required:
    - description
    - attributes
    additionalProperties: false
  typesDefinition: # carries a map of types provided by the service
    type: object
    patternProperties:
      "^[a-zA-Z0-9]+$": # the key represents the type name
        "$ref": "#/definitions/typeModelDefinition"
    additionalProperties: false
